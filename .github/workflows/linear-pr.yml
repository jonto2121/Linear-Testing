name: Create Linear Issue from PR

on:
  pull_request:
    types: [opened]

jobs:
  create-linear-issue:
    runs-on: ubuntu-latest
    steps:
      - name: Create Linear Issue
        shell: bash
        run: |
          # Extract PR info
          PR_TITLE="${{ github.event.pull_request.title }}"
          PR_NUMBER="${{ github.event.pull_request.number }}"
          PR_URL="${{ github.event.pull_request.html_url }}"
          PR_AUTHOR="${{ github.event.pull_request.user.login }}"
          PR_BODY="${{ github.event.pull_request.body }}"
          
          # Format description
          DESCRIPTION="## GitHub PR Details\n**PR:** [#${PR_NUMBER}: ${PR_TITLE}](${PR_URL})\n**Author:** ${PR_AUTHOR}\n\n${PR_BODY}"
          
          # Create Linear issue via API using curl
          RESPONSE=$(curl -s -X POST https://api.linear.app/graphql \
            -H "Content-Type: application/json" \
            -H "Authorization: ${{ secrets.LINEAR_API_KEY }}" \
            -d "{\"query\":\"mutation CreateIssue(\$title: String!, \$description: String!, \$teamKey: String!) { issueCreate(input: { title: \$title, description: \$description, teamKey: \$teamKey }) { success issue { id identifier url } } }\",\"variables\":{\"title\":\"[PR] ${PR_TITLE}\",\"description\":\"${DESCRIPTION}\",\"teamKey\":\"${{ secrets.LINEAR_TEAM_KEY }}\"}}")
          
          echo "Linear API response: $RESPONSE"
          
          # Extract issue identifier and URL using grep and sed
          ISSUE_IDENTIFIER=$(echo $RESPONSE | grep -o '"identifier":"[^"]*"' | sed 's/"identifier":"//;s/"//')
          ISSUE_URL=$(echo $RESPONSE | grep -o '"url":"[^"]*"' | sed 's/"url":"//;s/"//')
          
          if [ ! -z "$ISSUE_IDENTIFIER" ]; then
            echo "Linear issue created: $ISSUE_IDENTIFIER ($ISSUE_URL)"
            
            # Add comment to PR
            PR_COMMENT_URL="${{ github.api_url }}/repos/${{ github.repository }}/issues/${PR_NUMBER}/comments"
            curl -s -X POST $PR_COMMENT_URL \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Content-Type: application/json" \
              -d "{\"body\":\"âœ… Linear issue created: [${ISSUE_IDENTIFIER}](${ISSUE_URL})\"}"
          else
            echo "Failed to create Linear issue"
            exit 1
          fi
