name: Create Linear Issue from PR

on:
  pull_request:
    types: [opened]

jobs:
  create-linear-issue:
    runs-on: ubuntu-latest
    steps:
      - name: Create Linear Issue
        uses: actions/github-script@v6
        with:
          script: |
            // Import fetch - only once
            const fetch = (...args) => import('node-fetch').then(({default: fetch}) => fetch(...args));
            
            // Extract PR info
            const { title, html_url, body, user } = context.payload.pull_request;
            
            // Format issue description
            const description = `
            ## GitHub PR Details
            **PR:** [#${context.payload.pull_request.number}: ${title}](${html_url})
            **Author:** ${user.login}
            
            ${body || ''}
            `;
            
            // Create Linear issue via API
            try {
              console.log('Creating Linear issue...');
              
              const response = await fetch('https://api.linear.app/graphql', {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json',
                  'Authorization': process.env.LINEAR_API_KEY
                },
                body: JSON.stringify({
                  query: `
                    mutation CreateIssue($title: String!, $description: String!, $teamKey: String!) {
                      issueCreate(input: {
                        title: $title,
                        description: $description,
                        teamKey: $teamKey
                      }) {
                        success
                        issue {
                          id
                          identifier
                          url
                        }
                      }
                    }
                  `,
                  variables: {
                    title: `[PR] ${title}`,
                    description: description,
                    teamKey: process.env.LINEAR_TEAM_KEY
                  }
                })
              });
              
              const data = await response.json();
              console.log('Linear API response:', JSON.stringify(data));
              
              if (data.data?.issueCreate?.success) {
                const issue = data.data.issueCreate.issue;
                console.log(`Linear issue created: ${issue.identifier} (${issue.url})`);
                
                // Add a comment to the PR with the Linear issue link
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: context.payload.pull_request.number,
                  body: `âœ… Linear issue created: [${issue.identifier}](${issue.url})`
                });
              } else {
                console.error('Failed to create Linear issue:', data.errors || 'Unknown error');
                core.setFailed('Failed to create Linear issue');
              }
            } catch (error) {
              console.error('Error:', error);
              core.setFailed(error.message);
            }
        env:
          LINEAR_API_KEY: ${{ secrets.LINEAR_API_KEY }}
          LINEAR_TEAM_KEY: ${{ secrets.LINEAR_TEAM_KEY }}
